{"version":3,"sources":["components/Pagination/Pagination.tsx","utils.ts","App.tsx","api/peoples.ts","index.tsx"],"names":["Pagination","peoples","perPageSelector","onPageChange","useState","activePage","setActivePage","amountPages","Math","ceil","length","arrayPages","from","to","numbers","n","push","getNumbers","itemsOnPage","slice","useEffect","className","classNames","disabled","href","onClick","map","page","active","uuid4","person","name","App","setPerPageSelector","currentPage","setCurrentPage","setPeoples","fetch","then","response","json","res","id","value","onChange","event","target","htmlFor","pageNumber","ReactDOM","render","document","getElementById"],"mappings":"gOAYaA,EAA8B,SAAC,GAErC,IADLC,EACI,EADJA,QAASC,EACL,EADKA,gBAAiBC,EACtB,EADsBA,aAE1B,EAAoCC,mBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAEMC,EAAcC,KAAKC,KAAKR,EAAQS,QAAUR,GAC1CS,EClBD,SAAoBC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EDWYG,CAAW,EAAGV,GAC3BW,EAAcjB,EACjBkB,OAAOd,EAAa,IAAMH,EAAiBG,GAAcH,GAU5D,OARAkB,qBAAU,WACRd,EAAc,KACb,CAACJ,IAEJkB,qBAAU,WACRjB,GAAcE,KACb,CAACA,IAGF,qCACE,qBAAIgB,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CAAEC,SAAyB,IAAflB,IAAnD,SACE,mBACE,UAAQ,WACRgB,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMnB,EAAcD,EAAa,IAL5C,oBAUDM,EAAWe,KAAI,SAAAC,GAAI,OAClB,oBAEEN,UAAWC,IAAW,YAAa,CAAEM,OAAQD,IAAStB,IAFxD,SAIE,mBACE,UAAQ,WACRgB,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMnB,EAAcqB,IAJ/B,SAMGA,KATEE,kBAaT,oBAAIR,UAAWC,IAAW,YAAa,CACrCC,SAAUlB,IAAeE,IAD3B,SAIE,mBACE,UAAQ,WACRc,UAAU,YACVG,KAAK,QACL,gBAAc,OACdC,QAAS,kBAAMnB,EAAcD,EAAa,IAL5C,uBAWJ,6BACGa,EAAYQ,KAAI,SAACI,GAAD,OACf,oBAAkB,UAAQ,OAA1B,SAAkCA,EAAOC,MAAhCF,wBEtENG,EAAgB,WAC3B,MAA8C5B,mBAAS,KAAvD,mBAAOF,EAAP,KAAwB+B,EAAxB,KACA,EAAsC7B,mBAAS,GAA/C,mBAAO8B,EAAP,KAAoBC,EAApB,KACA,EAA8B/B,mBAAsB,IAApD,mBAAOH,EAAP,KAAgBmC,EAAhB,KAMA,OAJAhB,qBAAU,WCLHiB,MAHI,8CAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UDKdF,MAAK,SAAAG,GAAG,OAAIL,EAAWK,QACnC,IAGD,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWa,EADX,oBACkCA,EAAc,IAAMhC,EAAkB,EADxE,cAC+EgC,GAAehC,EAD9F,eACoHD,EAAQS,OAD5H,OAIA,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRqB,GAAG,kBACHrB,UAAU,eACVsB,MAAOzC,EACP0C,SAAU,SAACC,GAAD,OAAWZ,EAAmBY,EAAMC,OAAOH,QALvD,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB1B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEpB,QAASA,EACTC,gBAAiBA,EACjBC,aAAc,SAAC6C,GACbb,EAAea,UE5CzBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.30b07959.chunk.js","sourcesContent":["import { v4 as uuid4 } from 'uuid';\nimport classNames from 'classnames';\nimport { useEffect, useState } from 'react';\nimport { getNumbers } from '../../utils';\nimport { User } from '../../types';\n\ntype Props = {\n  peoples: User[]\n  perPageSelector: string\n  onPageChange: (pageNumber: number) => void\n};\n\nexport const Pagination: React.FC<Props> = ({\n  peoples, perPageSelector, onPageChange,\n}) => {\n  const [activePage, setActivePage] = useState(1);\n\n  const amountPages = Math.ceil(peoples.length / +perPageSelector);\n  const arrayPages = getNumbers(1, amountPages);\n  const itemsOnPage = peoples\n    .slice((activePage - 1) * +perPageSelector, activePage * +perPageSelector);\n\n  useEffect(() => {\n    setActivePage(1);\n  }, [perPageSelector]);\n\n  useEffect(() => {\n    onPageChange(+activePage);\n  }, [activePage]);\n\n  return (\n    <>\n      <ul className=\"pagination\">\n        <li className={classNames('page-item', { disabled: activePage === 1 })}>\n          <a\n            data-cy=\"prevLink\"\n            className=\"page-link\"\n            href=\"#prev\"\n            aria-disabled=\"true\"\n            onClick={() => setActivePage(activePage - 1)}\n          >\n            «\n          </a>\n        </li>\n        {arrayPages.map(page => (\n          <li\n            key={uuid4()}\n            className={classNames('page-item', { active: page === activePage })}\n          >\n            <a\n              data-cy=\"pageLink\"\n              className=\"page-link\"\n              href={`#${page}`}\n              onClick={() => setActivePage(page)}\n            >\n              {page}\n            </a>\n          </li>\n        ))}\n        <li className={classNames('page-item', {\n          disabled: activePage === amountPages,\n        })}\n        >\n          <a\n            data-cy=\"nextLink\"\n            className=\"page-link\"\n            href=\"#next\"\n            aria-disabled=\"true\"\n            onClick={() => setActivePage(activePage + 1)}\n          >\n            »\n          </a>\n        </li>\n      </ul>\n      <ul>\n        {itemsOnPage.map((person) => (\n          <li key={uuid4()} data-cy=\"item\">{person.name}</li>\n        ))}\n      </ul>\n    </>\n  );\n};\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import React, { useEffect, useState } from 'react';\nimport { getPeoples } from './api/peoples';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { User } from './types';\n\nexport const App: React.FC = () => {\n  const [perPageSelector, setPerPageSelector] = useState('2');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [peoples, setPeoples] = useState<User[] | []>([]);\n\n  useEffect(() => {\n    getPeoples().then(res => setPeoples(res));\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${(currentPage - 1) * +perPageSelector + 1} - ${currentPage * +perPageSelector} of ${peoples.length})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPageSelector}\n            onChange={(event) => setPerPageSelector(event.target.value)}\n          >\n            <option value=\"1\">1</option>\n            <option value=\"2\">2</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        peoples={peoples}\n        perPageSelector={perPageSelector}\n        onPageChange={(pageNumber: number) => {\n          setCurrentPage(pageNumber);\n        }}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import { User } from '../types';\n\n// eslint-disable-next-line\nconst API_URL = `https://jsonplaceholder.typicode.com/users`;\n\nexport function getPeoples(): Promise<User[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}